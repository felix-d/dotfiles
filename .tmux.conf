# Ring the bell if any background window rang a bell
# set -g default-shell $SHELL
set -g bell-action any
set-option -g allow-rename off

# Keep your finger on ctrl, or don't
bind-key ^D detach-client

bind-key -T prefix j copy-mode

# Create splits and vertical splits
bind-key v split-window -h -p 50 -c "#{pane_current_path}"
bind-key ^V split-window -h -p 50 -c "#{pane_current_path}"
bind-key s split-window -p 50 -c "#{pane_current_path}"
bind-key ^S split-window -p 50 -c "#{pane_current_path}"

# Pane resize in all four directions using vi bindings.
# Can use these raw but I map them to shift-ctrl-<h,j,k,l> in iTerm.
bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10

# Smart pane switching with awareness of vim splits.
# Source: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Use vi keybindings for tmux commandline input.
# Note that to get command mode you need to hit ESC twice...
set -g status-keys vi

# Use vi keybindings in copy and choice modes
setw -g mode-keys vi

# set first window to index 1 (not 0) to map more to the keyboard layout...
set-option -g base-index 1
set-window-option -g pane-base-index 1

# Patch for OS X pbpaste and pbcopy under tmux.
# set -g default-shell $SHELL
set -g default-shell $SHELL
set -g default-command "reattach-to-user-namespace -l ${SHELL}"

# Screen like binding
unbind C-b
set -g prefix C-a
bind C-k send-keys C-k
bind C-a send-prefix

# No escape time for vi mode
set -sg escape-time 0

# Bigger history
set -g history-limit 10000

# New windows/pane in $PWD
bind c new-window -c "#{pane_current_path}"

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Visual selection like vi

# This tmux statusbar config was created by tmuxline.vim
# on Wed, 30 Nov 2016

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'felix-d/tmux-onedark-theme'

run '~/.tmux/plugins/tpm/tpm'

set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set-option -g mouse on
# Default termtype. If the rcfile sets $TERM, that overrides this value.
# set -g default-terminal screen-256color
set -g default-terminal "tmux"

# unbind -T vi-copy Enter
# bind-key -T vi-copy 'v' begin-selection
# bind-key -T vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
# bind-key -T vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel
